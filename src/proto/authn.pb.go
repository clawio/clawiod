// Code generated by protoc-gen-go.
// source: authn.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	authn.proto
	error.proto
	metadata.proto
	secentity.proto

It has these top-level messages:
	TokenRequest
	TokenResponse
	PingRequest
	PingResponse
	Error
	MkdirRequest
	MkdirResponse
	CopyRequest
	CopyResponse
	MoveRequest
	MoveResponse
	RemoveRequest
	RemoveResponse
	StatRequest
	StatResponse
	MetaDataInfo
	SecEntity
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type TokenRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Opaque   string `protobuf:"bytes,3,opt,name=opaque" json:"opaque,omitempty"`
}

func (m *TokenRequest) Reset()                    { *m = TokenRequest{} }
func (m *TokenRequest) String() string            { return proto1.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()               {}
func (*TokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TokenResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *TokenResponse) Reset()                    { *m = TokenResponse{} }
func (m *TokenResponse) String() string            { return proto1.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()               {}
func (*TokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TokenResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type PingRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PingResponse struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PingResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto1.RegisterType((*TokenRequest)(nil), "proto.TokenRequest")
	proto1.RegisterType((*TokenResponse)(nil), "proto.TokenResponse")
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for AuthN service

type AuthNClient interface {
	Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type authNClient struct {
	cc *grpc.ClientConn
}

func NewAuthNClient(cc *grpc.ClientConn) AuthNClient {
	return &authNClient{cc}
}

func (c *authNClient) Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := grpc.Invoke(ctx, "/proto.AuthN/Token", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authNClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.AuthN/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthN service

type AuthNServer interface {
	Token(context.Context, *TokenRequest) (*TokenResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

func RegisterAuthNServer(s *grpc.Server, srv AuthNServer) {
	s.RegisterService(&_AuthN_serviceDesc, srv)
}

func _AuthN_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthNServer).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AuthN/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthNServer).Token(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthN_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthNServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AuthN/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthNServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthN_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AuthN",
	HandlerType: (*AuthNServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Token",
			Handler:    _AuthN_Token_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _AuthN_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("authn.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x8f, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xa9, 0x9a, 0xa2, 0x37, 0xad, 0x48, 0xea, 0xa2, 0x54, 0x17, 0x92, 0x95, 0x20, 0x54,
	0xa8, 0x4b, 0x57, 0x0a, 0x6e, 0x45, 0xc4, 0x17, 0x88, 0x78, 0xb1, 0xc3, 0xcc, 0x24, 0x69, 0x7e,
	0x98, 0xd7, 0x1f, 0xf2, 0x33, 0x43, 0xcb, 0xac, 0x4a, 0xbf, 0xc3, 0xf9, 0xce, 0x0d, 0x50, 0xe1,
	0xdd, 0x28, 0x7b, 0x6d, 0x94, 0x53, 0x8c, 0xc4, 0x4f, 0x47, 0xd1, 0x18, 0x65, 0x12, 0xe3, 0xef,
	0x50, 0xfd, 0xa8, 0x35, 0xca, 0x6f, 0x9c, 0x3c, 0x5a, 0xc7, 0x6e, 0xe0, 0xd2, 0x5b, 0x34, 0x52,
	0x6c, 0xb1, 0x2d, 0x1e, 0x8a, 0xc7, 0xab, 0x40, 0xb4, 0xb0, 0x76, 0xa7, 0xcc, 0x5f, 0x7b, 0x16,
	0xc9, 0x35, 0x94, 0x4a, 0x8b, 0xc9, 0x63, 0x7b, 0x1e, 0xfe, 0xf9, 0x2b, 0xd4, 0xd9, 0x61, 0xb5,
	0x92, 0x16, 0x59, 0x0d, 0xc4, 0x05, 0x90, 0x0d, 0x77, 0x40, 0xe2, 0x64, 0xac, 0xd3, 0xa1, 0x4a,
	0xd3, 0xfd, 0x47, 0x60, 0xfc, 0x1e, 0xe8, 0xd7, 0x4a, 0xfe, 0x1f, 0xf6, 0x97, 0x55, 0xfe, 0x04,
	0x55, 0x4a, 0xb3, 0xf9, 0xa8, 0x2a, 0x4e, 0x55, 0xc3, 0x06, 0xc8, 0x9b, 0x77, 0xe3, 0x27, 0x1b,
	0x80, 0xc4, 0x83, 0x58, 0x93, 0xf3, 0xf9, 0x13, 0xbb, 0xdb, 0x25, 0xcc, 0xe6, 0x67, 0xb8, 0x08,
	0x4b, 0x8c, 0xe5, 0x74, 0x76, 0x54, 0xd7, 0x2c, 0x58, 0x2a, 0xfc, 0x96, 0x91, 0xbd, 0xec, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xd1, 0x3c, 0x1f, 0x7d, 0x63, 0x01, 0x00, 0x00,
}
