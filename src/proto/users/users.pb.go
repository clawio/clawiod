// Code generated by protoc-gen-go.
// source: users/users.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetCurrentAccountReq struct {
}

func (m *GetCurrentAccountReq) Reset()                    { *m = GetCurrentAccountReq{} }
func (m *GetCurrentAccountReq) String() string            { return proto1.CompactTextString(m) }
func (*GetCurrentAccountReq) ProtoMessage()               {}
func (*GetCurrentAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type GetCurrentAccountRes struct {
	AccountId   string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
}

func (m *GetCurrentAccountRes) Reset()                    { *m = GetCurrentAccountRes{} }
func (m *GetCurrentAccountRes) String() string            { return proto1.CompactTextString(m) }
func (*GetCurrentAccountRes) ProtoMessage()               {}
func (*GetCurrentAccountRes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto1.RegisterType((*GetCurrentAccountReq)(nil), "proto.GetCurrentAccountReq")
	proto1.RegisterType((*GetCurrentAccountRes)(nil), "proto.GetCurrentAccountRes")
}

func init() { proto1.RegisterFile("users/users.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2d, 0x4e, 0x2d,
	0x2a, 0xd6, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x4a, 0x49, 0x8c,
	0x4b, 0xc4, 0x3d, 0xb5, 0xc4, 0xb9, 0xb4, 0xa8, 0x28, 0x35, 0xaf, 0xc4, 0x31, 0x39, 0x39, 0xbf,
	0x34, 0xaf, 0x24, 0x28, 0xb5, 0x50, 0x29, 0x02, 0xab, 0x78, 0xb1, 0x90, 0x2c, 0x17, 0x57, 0x22,
	0x84, 0x17, 0x9f, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x09, 0x15, 0xf1, 0x4c,
	0x11, 0x52, 0xe4, 0xe2, 0x49, 0xc9, 0x2c, 0x2e, 0xc8, 0x49, 0xac, 0x8c, 0xcf, 0x4b, 0xcc, 0x4d,
	0x95, 0x60, 0x02, 0x2b, 0xe0, 0x86, 0x8a, 0xf9, 0x25, 0xe6, 0xa6, 0x1a, 0x85, 0x71, 0xb1, 0x86,
	0x82, 0xdc, 0x21, 0xe4, 0xcb, 0x25, 0x88, 0x61, 0x85, 0x90, 0x34, 0xc4, 0x79, 0x7a, 0xd8, 0x1c,
	0x25, 0x85, 0x47, 0xb2, 0x38, 0x89, 0x0d, 0x2c, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x3e, 0x29, 0xb1, 0xec, 0x00, 0x00, 0x00,
}
